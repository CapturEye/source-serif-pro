languagesystem DFLT dflt;
languagesystem latn dflt; # Latin default

languagesystem latn AZE; # Azeri
languagesystem latn CRT; # Crimean Tatar
languagesystem latn TRK; # Turkish
languagesystem latn NLD; # Dutch


# Figures:

@FIG_LINING_TAB    =  [  zero       one       two       three       four       five       six       seven       eight       nine       ];
@FIG_OLDSTYLE_TAB  =  [  zero.tosf  one.tosf  two.tosf  three.tosf  four.tosf  five.tosf  six.tosf  seven.tosf  eight.tosf  nine.tosf  ];
@FIG_LINING        =  [  zero.lf    one.lf    two.lf    three.lf    four.lf    five.lf    six.lf    seven.lf    eight.lf    nine.lf    ];
@FIG_OLDSTYLE      =  [  zero.osf   one.osf   two.osf   three.osf   four.osf   five.osf   six.osf   seven.osf   eight.osf   nine.osf   ];
@FIG_NUMR          =  [  zero.numr  one.numr  two.numr  three.numr  four.numr  five.numr  six.numr  seven.numr  eight.numr  nine.numr  ];
@FIG_DNOM          =  [  zero.dnom  one.dnom  two.dnom  three.dnom  four.dnom  five.dnom  six.dnom  seven.dnom  eight.dnom  nine.dnom  ];
@FIG_SUPS          =  [  zero.sups  one.sups  two.sups  three.sups  four.sups  five.sups  six.sups  seven.sups  eight.sups  nine.sups  ];
@FIG_INF           =  [  zero.subs  one.subs  two.subs  three.subs  four.subs  five.subs  six.subs  seven.subs  eight.subs  nine.subs  ];
@FIG_CASE          =  [  zero.cap   one.cap   two.cap   three.cap   four.cap   five.cap   six.cap   seven.cap   eight.cap   nine.cap   ];


# Latin:

@LAT_LC_BASIC    = [ a b c d e f g h i j k l m n o p q r s t u v w x y z ];
@LAT_UC_BASIC    = [ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z ];
@LAT_UC_ACCENTED = [ Agrave Aacute Acircumflex Atilde Adieresis Amacron Abreve Aring Aogonek Ccedilla Cacute Ccaron Dcaron Egrave Eacute Ecircumflex Ecaron Edieresis Emacron Edotaccent Eogonek Gbreve Gdotaccent Gcommaaccent Igrave Iacute Icircumflex Idieresis Imacron Idotaccent Iogonek Kcommaaccent Lacute Lcaron Lcommaaccent Ldot Nacute Ncaron Ntilde Ncommaaccent Ndotaccent Ograve Oacute Ocircumflex Otilde Odieresis Omacron Ohungarumlaut Racute Rcaron Rcommaaccent Sacute Scaron Scedilla Scommaaccent Tcaron Tcedilla Tcommaaccent Ugrave Uacute Ucircumflex Udieresis Umacron Uring Uhungarumlaut Uogonek Yacute Ydieresis Zacute Zcaron Zdotaccent ];
@LAT_UC_ADDL     = [ AE Dcroat Lslash Oslash OE Eth Thorn ];
@LAT_UC_ALL = [ @LAT_UC_BASIC @LAT_UC_ACCENTED @LAT_UC_ADDL ];


# Punctuation etc.:

@PUNCT_SMALL_FIG    = [ bracketleft      bracketright      parenleft      parenright      period      comma      ];
@PUNCT_NUMR         = [ bracketleft.numr bracketright.numr parenleft.numr parenright.numr period.numr comma.numr ];
@PUNCT_DNOM         = [ bracketleft.dnom bracketright.dnom parenleft.dnom parenright.dnom period.dnom comma.dnom ];
@PUNCT_SUPS         = [ bracketleft.sups bracketright.sups parenleft.sups parenright.sups period.sups comma.sups ];
@PUNCT_SUBS         = [ bracketleft.subs bracketright.subs parenleft.subs parenright.subs period.subs comma.subs ];

@LAT_LCSUPS_BASIC = [ a.sups b.sups c.sups d.sups e.sups f.sups g.sups h.sups i.sups j.sups k.sups l.sups m.sups n.sups o.sups p.sups q.sups r.sups s.sups t.sups u.sups v.sups w.sups x.sups y.sups z.sups ];
# @LAT_UCSUPS_BASIC = [ A.sups B.sups C.sups D.sups E.sups F.sups G.sups H.sups I.sups J.sups K.sups L.sups M.sups N.sups O.sups P.sups Q.sups R.sups S.sups T.sups U.sups V.sups W.sups X.sups Y.sups Z.sups ];

@CASE_SOURCE  =  [  at      braceleft      braceright      bracketleft      bracketright      emdash      endash      exclamdown      guillemotleft      guillemotright      guilsinglleft      guilsinglright      horizontalbar      hyphen      parenleft      parenright      questiondown      ];
@CASE_TARGET  =  [  at.cap  braceleft.cap  braceright.cap  bracketleft.cap  bracketright.cap  emdash.cap  endash.cap  exclamdown.cap  guillemotleft.cap  guillemotright.cap  guilsinglleft.cap  guilsinglright.cap  horizontalbar.cap  hyphen.cap  parenleft.cap  parenright.cap  questiondown.cap  ];

@MARKS_CMB      = [ acutecmb brevecmb caroncmb circumflexcmb dieresiscmb dotaccentcmb gravecmb hungarumlautcmb macroncmb ringcmb tildecmb ];
@MARKS_CMB_CASE = [ acutecmb.cap brevecmb.cap caroncmb.cap circumflexcmb.cap dieresiscmb.cap dotaccentcmb.cap gravecmb.cap hungarumlautcmb.cap macroncmb.cap ringcmb.cap tildecmb.cap ];


# lookup for handling the Dutch double-accented IJ:
lookup locl_NLD_ijacute {
    sub j by dotlessj acutecmb;
    sub J by J acutecmb.cap;
} locl_NLD_ijacute;


#--------------------------------------
feature aalt { # Access All Alternates
    feature locl;
    feature numr;
    feature dnom;
    feature ordn;
    feature sups;
    feature subs;
    feature sinf;
    feature pnum;
    feature onum;
    feature tnum;
    feature lnum;
    feature ss01;
    feature case;
    feature zero;
} aalt;


#--------------------------------------
feature locl { # Localized Forms

    script latn;
        language TRK exclude_dflt;
            lookup I_DOT {
                sub i by i.trk;
            } I_DOT;

        language AZE exclude_dflt;
            lookup I_DOT;

        language CRT exclude_dflt;
            lookup I_DOT;
} locl;


#--------------------------------------
feature ccmp {

    lookup GLYPH_COMPOSITION_LAT_NONCONTEXTUAL {
        sub d caroncmb by dcaron;
        sub l caroncmb by lcaron;
        sub t caroncmb by tcaron;
        # sub g tildecmb by gtilde;
        # sub G tildecmb by Gtilde;
        sub a ogonekcmb by aogonek;
        sub A ogonekcmb by Aogonek;
        sub e ogonekcmb by eogonek;
        sub E ogonekcmb by Eogonek;
        sub i ogonekcmb by iogonek;
        sub I ogonekcmb by Iogonek;
        # sub o ogonekcmb by oogonek;
        # sub O ogonekcmb by Oogonek;
        sub u ogonekcmb by uogonek;
        sub U ogonekcmb by Uogonek;
        sub g cedillacmb by gcommaaccent; # The decomposition defined by Unicode is: 0067+0327
    } GLYPH_COMPOSITION_LAT_NONCONTEXTUAL;

    lookup CASE_ACCENTS_CMB_CONTEXT {
        # substitutes combining marks for minuscules with forms for uppercase
        sub [ @LAT_UC_ALL ] @MARKS_CMB' by @MARKS_CMB_CASE;
        sub @MARKS_CMB_CASE @MARKS_CMB' by @MARKS_CMB_CASE;
    } CASE_ACCENTS_CMB_CONTEXT;

    lookup IJ_ACUTE {
        script latn;
        language NLD exclude_dflt;
            sub Iacute J' lookup locl_NLD_ijacute;
            sub iacute j' lookup locl_NLD_ijacute;
    } IJ_ACUTE;

} ccmp;


#--------------------------------------
feature case {
    sub @CASE_SOURCE by @CASE_TARGET;
    sub @FIG_LINING_TAB by @FIG_CASE;
} case;


#--------------------------------------
feature numr { # Numerators
    lookup NUMR {
        sub @FIG_LINING_TAB by @FIG_NUMR;
        sub @PUNCT_SMALL_FIG by @PUNCT_NUMR;
    } NUMR;
} numr;


#--------------------------------------
feature dnom { # Denominators
    sub @FIG_LINING_TAB by @FIG_DNOM;
    sub @PUNCT_SMALL_FIG by @PUNCT_DNOM;
} dnom;


#--------------------------------------
feature frac { # Fractions
    @SLASH = [ slash.frac fraction divisionslash ];

    lookup NUMR;
    sub slash by slash.frac;
    sub @FIG_NUMR space' by space.frac;

    sub [ fraction divisionslash slash.frac @FIG_DNOM @PUNCT_DNOM ] [ @FIG_NUMR @PUNCT_NUMR ]' by [ @FIG_DNOM @PUNCT_DNOM ];
    sub @FIG_DNOM space.frac [ @FIG_NUMR @PUNCT_NUMR ]' by [ @FIG_DNOM @PUNCT_DNOM ];
} frac;


#--------------------------------------
feature ordn { # Ordinals
    lookup SUPERIOR_MINUSCULE {
        sub @LAT_LC_BASIC by @LAT_LCSUPS_BASIC;
        sub [ egrave eacute ] by [ egrave.sups eacute.sups ];
    } SUPERIOR_MINUSCULE;
} ordn;


#--------------------------------------
feature sups { # Superscript
    lookup SUPERIOR_MINUSCULE;

    lookup SUPERIOR_NUMERALS_SORTS {
        sub @FIG_LINING_TAB by @FIG_SUPS;
        sub @PUNCT_SMALL_FIG by @PUNCT_SUPS;
    } SUPERIOR_NUMERALS_SORTS;

    lookup SUPERIOR_SORTS {
        sub [ colon hyphen endash emdash ] by [ colon.sups hyphen.sups endash.sups emdash.sups ];
    } SUPERIOR_SORTS;

} sups;


#--------------------------------------
feature subs { # Subscript
    lookup INFERIOR {
        sub @FIG_LINING_TAB by @FIG_INF;
        sub @PUNCT_SMALL_FIG by @PUNCT_SUBS;
    } INFERIOR;
} subs;


#--------------------------------------
feature sinf { # Scientific Inferiors
    lookup INFERIOR;
} sinf;


#--------------------------------------
feature tnum { # Tabular Figures
    sub @FIG_LINING by @FIG_LINING_TAB;
    sub @FIG_OLDSTYLE by @FIG_OLDSTYLE_TAB;
} tnum;


#--------------------------------------
feature onum { # Oldstyle Figures
    sub @FIG_LINING by @FIG_OLDSTYLE;
    sub @FIG_LINING_TAB by @FIG_OLDSTYLE_TAB;
} onum;


#--------------------------------------
feature pnum { # Proportional Figures
    sub @FIG_LINING_TAB by @FIG_LINING;
    sub @FIG_OLDSTYLE_TAB by @FIG_OLDSTYLE;
} pnum;


#--------------------------------------
feature lnum { # Lining Figures
    sub @FIG_OLDSTYLE by @FIG_LINING;
    sub @FIG_OLDSTYLE_TAB by @FIG_LINING_TAB;
} lnum;


#--------------------------------------
feature zero {
	sub zero by zero.slash;
	sub zero.lf by zero.lfslash;
} zero;


#--------------------------------------
feature ss01 {
    sub ampersand by ampersand.alt;
} ss01;


#--------------------------------------
feature liga {
    sub f f b by f_f_b;
    sub f f f by f_f_f;
    sub f f h by f_f_h;
    sub f f i by f_f_i;
    sub f f j by f_f_j;
    sub f f k by f_f_k;
    sub f f l by f_f_l;
    sub f f t by f_f_t;
    sub f b by f_b;
    sub f f by f_f;
    sub f h by f_h;
    sub f i by f_i;
    sub f j by f_j;
    sub f k by f_k;
    sub f l by f_l;
    sub f t by f_t;
} liga;


#-------------------------------------------
feature size {
	parameters 10.0 0; # design size, subfamily
} size;
